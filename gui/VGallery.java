/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import app.Audio;
import java.util.ArrayList;
import app.Image;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.sql.Time;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.SwingUtilities;


/**
 *
 * @author alumnogreibd
 */
public class VGallery extends javax.swing.JDialog{

    app.FachadaAplicacion fa;
    private ArrayList<Image> imagenes;
    private ArrayList<Audio> audios;
    private int imgIndex;
    private int audIndex;
    private int festa;
    private String galeria;
    private boolean esOrganizador; //Necesario para saber si el usuario es el organizador de la fiesta   
    
    /**
     * Creates new form VGaleria
     * @param parent
     */
    public VGallery(java.awt.Frame parent, boolean modal, app.FachadaAplicacion fa, int festa, String galeria,boolean esOrganizador) {
        super(parent, modal);
        this.fa = fa;
        this.festa=festa;
        this.galeria=galeria;
        this.esOrganizador=esOrganizador;
        BackgroundPanel panelFondo = new BackgroundPanel("/resources/background.png");
        setContentPane(panelFondo);
        initComponents();
        this.setLocationRelativeTo(null);
        imgIndex = 0;
        audIndex=0;
        this.imagenes = this.fa.consultarImagenesGaleria(this.festa,this.galeria);
        this.audios = this.fa.consultarAudiosGaleria(this.festa,this.galeria);
        this.lblName.setText(this.galeria);
        this.getContentPane().setBackground(new Color(221,160,221));
        
        if(this.audios.size()>0){
            this.txtnomeAudio.setText(this.audios.get(audIndex).getUrl());
        }
        else{
            this.txtnomeAudio.setText("Non hai audios dispoÃ±ibles");
            this.btnReproducirAudio.setEnabled(false);
            this.btnEliminarAudio.setEnabled(false);
        }
       
        if(this.imagenes.size()>0){
            lblImage.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir")+this.imagenes.get(imgIndex).getUrl()));
        }
        else{
            btnEliminarImagen.setEnabled(false);
        }
        this.botonesOrganizador();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exploradorArchivos = new javax.swing.JFileChooser();
        panelAudios = new javax.swing.JTabbedPane();
        panelImagen = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        btnLeftImage = new javax.swing.JButton();
        btnRightImage = new javax.swing.JButton();
        btnEliminarImagen = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnReproducirAudio = new javax.swing.JButton();
        txtnomeAudio = new javax.swing.JLabel();
        btnLeftAudio = new javax.swing.JButton();
        btnRightAudio = new javax.swing.JButton();
        btnEliminarAudio = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnSubir = new javax.swing.JButton();
        btnEliminarGaleria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnLeftImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/leftArrow.jpeg"))); // NOI18N
        btnLeftImage.setText("jButton1");
        btnLeftImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftImageActionPerformed(evt);
            }
        });

        btnRightImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/rightArrow.jpeg"))); // NOI18N
        btnRightImage.setText("jButton1");
        btnRightImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightImageActionPerformed(evt);
            }
        });

        btnEliminarImagen.setText("Eliminar imagen");
        btnEliminarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarImagenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelImagenLayout = new javax.swing.GroupLayout(panelImagen);
        panelImagen.setLayout(panelImagenLayout);
        panelImagenLayout.setHorizontalGroup(
            panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLeftImage, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(btnRightImage, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImagenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminarImagen)
                .addGap(58, 58, 58))
        );
        panelImagenLayout.setVerticalGroup(
            panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImagenLayout.createSequentialGroup()
                .addContainerGap(168, Short.MAX_VALUE)
                .addComponent(btnLeftImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
            .addGroup(panelImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEliminarImagen)
                .addGroup(panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelImagenLayout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(btnRightImage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelImagenLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelAudios.addTab("Imagenes", panelImagen);

        btnReproducirAudio.setText("Reproducir");
        btnReproducirAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReproducirAudioActionPerformed(evt);
            }
        });

        txtnomeAudio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/corcheas.gif"))); // NOI18N
        txtnomeAudio.setText("jLabel1");

        btnLeftAudio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/leftArrow.jpeg"))); // NOI18N
        btnLeftAudio.setText("jButton1");
        btnLeftAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftAudioActionPerformed(evt);
            }
        });

        btnRightAudio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/rightArrow.jpeg"))); // NOI18N
        btnRightAudio.setText("jButton2");
        btnRightAudio.setBorderPainted(false);
        btnRightAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightAudioActionPerformed(evt);
            }
        });

        btnEliminarAudio.setText("Eliminar Audio");
        btnEliminarAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAudioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addComponent(btnReproducirAudio)
                .addContainerGap(320, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLeftAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtnomeAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(btnRightAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnEliminarAudio))
                .addGap(56, 56, 56))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEliminarAudio)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLeftAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRightAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addComponent(btnReproducirAudio))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtnomeAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(87, 87, 87))
        );

        panelAudios.addTab("Audios", jPanel1);

        lblName.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("Galeria");

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/leftArrow.jpeg"))); // NOI18N
        btnBack.setText("jButton1");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSubir.setText("Subir archivo");
        btnSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirActionPerformed(evt);
            }
        });

        btnEliminarGaleria.setText("Eliminar GalerÃ­a");
        btnEliminarGaleria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarGaleriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelAudios)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarGaleria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSubir)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnSubir)
                                .addComponent(btnEliminarGaleria))
                            .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelAudios, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRightImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightImageActionPerformed
        // TODO add your handling code here:
        if(this.imagenes.size()>0){
            this.imgIndex++;
            if(this.imgIndex > this.imagenes.size()-1)
                this.imgIndex = 0;
            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(System.getProperty("user.dir")+this.imagenes.get(imgIndex).getUrl());
            icon.getImage().flush();
            this.lblImage.setIcon(icon);
        }
    }//GEN-LAST:event_btnRightImageActionPerformed

    private void btnLeftImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftImageActionPerformed
        // TODO add your handling code here:
        if(this.imagenes.size()>0){
            this.imgIndex--;
            if(this.imgIndex < 0)
                this.imgIndex = this.imagenes.size()-1;
            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(System.getProperty("user.dir")+this.imagenes.get(imgIndex).getUrl());
            icon.getImage().flush();
            this.lblImage.setIcon(icon);
        }
    }//GEN-LAST:event_btnLeftImageActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirActionPerformed
        // TODO add your handling code here:
        this.exploradorArchivos.showOpenDialog(this);
        File archivo=exploradorArchivos.getSelectedFile();
        Boolean ok=false;
        String pie="";//Pie de multimedia
        //Verificamos a seleccion dun arquivo
        if(archivo!=null){
            try{
                //Definimos el destino del archivo, que sera la carpeta /src/Multimedia/
                String Dest="/src/Multimedia/"+archivo.getName();
                Path Destino= Paths.get(System.getProperty("user.dir")+Dest);
                //Definimos el origen, que sera el archivo seleccionado
                String Orig= archivo.getPath();
                Path Origen= Paths.get(Orig);
                //Pedimos al usuario el pie de foto
                
                //El archivo es una imagen
                 if ((new EvaluaExtension().accept(archivo, ".jpeg"))||(new EvaluaExtension().accept(archivo, ".jpg"))||(new EvaluaExtension().accept(archivo, ".png"))) {
                    pie=JOptionPane.showInputDialog("Escriba o pe de foto");
                    BufferedImage bimg = ImageIO.read(archivo);
                    int ancho         = bimg.getWidth();
                    int alto         = bimg.getHeight();   
                    Image imagen=new Image(Dest,ancho,alto,this.festa,this.galeria);
                    ok=this.fa.subirImagen(imagen,pie);
                    this.imagenes.add(imagen);
                    this.btnEliminarImagen.setEnabled(true);
                    lblImage.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir")+this.imagenes.get(imgIndex).getUrl()));
                    
                 }
                 
                 else if ((new EvaluaExtension().accept(archivo, ".au"))||(new EvaluaExtension().accept(archivo, ".wav"))||(new EvaluaExtension().accept(archivo, ".aif"))) {
                     pie=JOptionPane.showInputDialog("Escriba o pe do audio");
                     Time duracion = this.duracionAudio(archivo);
                     Audio audio=new Audio(Dest,duracion,this.festa,this.galeria);
                     ok=this.fa.subirAudio(audio,pie);
                     this.audios.add(audio);
                     this.btnReproducirAudio.setEnabled(true);
                     this.btnEliminarAudio.setEnabled(true);
                 }
                 
                 else{
                     this.fa.getFachadaGui().muestraExcepcion("Formato no valido");
                 }
                 if(ok==true){//La transaccion se ha llevado a cabo correctamente: copiamos el archivo en Multimedia
                     ///Copiamos el nuevo archivo con la clase Files, reemplazamos si ya existe uno igual
                    Files.copy(Origen,Destino,REPLACE_EXISTING);//Mover de sitio
                 }
            } catch (IOException ex) {
                Logger.getLogger(VGallery.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedAudioFileException ex) {
                Logger.getLogger(VGallery.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.botonesOrganizador();
        }        
    }//GEN-LAST:event_btnSubirActionPerformed

    private void btnReproducirAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReproducirAudioActionPerformed
        
        this.reproducirAudio();
    }//GEN-LAST:event_btnReproducirAudioActionPerformed

    private void btnLeftAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftAudioActionPerformed
        // TODO add your handling code here:
        if(this.audios.size()>0){
            this.audIndex--;
            if(this.audIndex < 0)
                this.audIndex = this.audios.size()-1;
            this.txtnomeAudio.setText(this.audios.get(audIndex).getUrl());
        }
    }//GEN-LAST:event_btnLeftAudioActionPerformed

    private void btnRightAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightAudioActionPerformed
        // TODO add your handling code here:
         if(this.audios.size()>0){
            this.audIndex++;
            if(this.audIndex > this.audios.size()-1)
                this.audIndex = 0;
            this.txtnomeAudio.setText(this.audios.get(audIndex).getUrl());
        }
    }//GEN-LAST:event_btnRightAudioActionPerformed

    private void btnEliminarGaleriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarGaleriaActionPerformed
    // TODO add your handling code here:
        int eleccion=JOptionPane.showConfirmDialog(panelImagen, "Seguro que queres eliminar esta galeria?");
        if(eleccion==0){
            this.fa.eliminarGaleria(this.festa,this.galeria);
            try {
                for(imgIndex=0;imgIndex<this.imagenes.size();imgIndex++){
                    Files.delete(Paths.get(System.getProperty("user.dir")+this.imagenes.get(imgIndex).getUrl()));
                }
                for(audIndex=0;audIndex<this.audios.size();audIndex++){
                    Files.delete(Paths.get(System.getProperty("user.dir")+this.audios.get(audIndex).getUrl()));
                }
            this.dispose();
            this.fa.muestraExcepcion("Salga de la ventana fiesta para ver los cambios");
            } catch (IOException ex) {
                Logger.getLogger(VGallery.class.getName()).log(Level.SEVERE, null, ex);
                  this.fa.muestraExcepcion("Error al eliminar archivos residuales: los archivos han sido borrados \n correctamente de la BBDD pero no de su ordenador. \n Eliminelos manualmente");
            }
        }
    }//GEN-LAST:event_btnEliminarGaleriaActionPerformed

    private void btnEliminarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarImagenActionPerformed
        // TODO add your handling code here:
        int eleccion=JOptionPane.showConfirmDialog(panelImagen, "Seguro que queres eliminar esta imaxe?");
        if(eleccion==0){
            
            try {
                this.fa.eliminarImagen(this.imagenes.get(imgIndex));
                Files.delete(Paths.get(System.getProperty("user.dir")+this.imagenes.get(imgIndex).getUrl()));
                this.imagenes.remove(imgIndex);
            } catch (IOException ex) {
                Logger.getLogger(VGallery.class.getName()).log(Level.SEVERE, null, ex);
                  this.fa.muestraExcepcion("Error al eliminar archivos residuales: los archivos han sido borrados \n correctamente de la BBDD pero no de su ordenador. \n Eliminelos manualmente");
            }
            
            if(this.imagenes.size()>1){
                imgIndex--;
                lblImage.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir")+this.imagenes.get(imgIndex).getUrl()));
            }
            else if(this.imagenes.size()==1){
                imgIndex=0;
                 lblImage.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir")+this.imagenes.get(imgIndex).getUrl()));
            }
            else{
                this.btnEliminarImagen.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnEliminarImagenActionPerformed

    private void btnEliminarAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAudioActionPerformed
        // TODO add your handling code here:
        int eleccion=JOptionPane.showConfirmDialog(panelImagen, "Seguro que queres eliminar este audio?");
        if(eleccion==0){
            
            try {
                this.fa.eliminarAudio(this.audios.get(audIndex));
                Files.delete(Paths.get(System.getProperty("user.dir")+this.audios.get(audIndex).getUrl()));
                this.audios.remove(audIndex);
            } catch (IOException ex) {
                Logger.getLogger(VGallery.class.getName()).log(Level.SEVERE, null, ex);
                this.fa.muestraExcepcion("Error al eliminar archivos residuales: los archivos han sido borrados \n correctamente de la BBDD pero no de su ordenador. \n Eliminelos manualmente");
            }
            
            if(this.audios.size()>0){
                this.txtnomeAudio.setText(this.audios.get(audIndex).getUrl());
            }
            else{
                this.txtnomeAudio.setText("Non hai audios dispoÃ±ibles");
                this.btnReproducirAudio.setEnabled(false);
                this.btnEliminarAudio.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnEliminarAudioActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEliminarAudio;
    private javax.swing.JButton btnEliminarGaleria;
    private javax.swing.JButton btnEliminarImagen;
    private javax.swing.JButton btnLeftAudio;
    private javax.swing.JButton btnLeftImage;
    private javax.swing.JButton btnReproducirAudio;
    private javax.swing.JButton btnRightAudio;
    private javax.swing.JButton btnRightImage;
    private javax.swing.JButton btnSubir;
    private javax.swing.JFileChooser exploradorArchivos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    private javax.swing.JTabbedPane panelAudios;
    private javax.swing.JPanel panelImagen;
    private javax.swing.JLabel txtnomeAudio;
    // End of variables declaration//GEN-END:variables

class EvaluaExtension implements FilenameFilter {
 
    @Override
    public boolean accept(File dir, String extension) {
        return dir.getName().endsWith(extension);
    }
}

public void botonesOrganizador(){

    if(this.esOrganizador==false){
        this.btnEliminarAudio.setEnabled(false);
        this.btnEliminarGaleria.setEnabled(false);
        this.btnEliminarImagen.setEnabled(false);
    }
}

public Time duracionAudio(File file) throws UnsupportedAudioFileException, IOException {

    AudioFileFormat audioFileFormat = AudioSystem.getAudioFileFormat(file);
    Map properties = audioFileFormat.properties();
    Time duracion;

    try{
        Long micro = (Long) properties.get("duration");
        long a      = (long) (micro / 1000); //milisegundos
        duracion= new Time(a);//Conversion a Time
    }catch(java.lang.NullPointerException ex){       
        this.fa.muestraExcepcion("A duracion do audio non esta dispoÃ±ible: asignase o valor por defecto");
        duracion=new Time(0);
    }

    return duracion;
}

public void reproducirAudio(){
    try {         
            // Se obtiene un Clip de sonido
            Clip sonido = AudioSystem.getClip();         
            // Se carga con un fichero wav
            sonido.open(AudioSystem.getAudioInputStream(new File(System.getProperty("user.dir")+this.audios.get(audIndex).getUrl()))); 
      
            Runnable r = new Runnable() {
                public void run() {
                    final JToggleButton startStop = new JToggleButton("Parar");
                    startStop.addActionListener( new ActionListener() {
                        public void actionPerformed(ActionEvent ae) {
                            if (startStop.isSelected()) {
                                sonido.stop();
                                startStop.setText("Reproducir");
                            } else {
                                sonido.loop(-1);
                                sonido.start();
                                startStop.setText("Parar");
                            }
                        }
                    } );
                    sonido.loop(-1);
                    JOptionPane.showMessageDialog(null, startStop);
                }
            };
            SwingUtilities.invokeLater(r);
        } catch (LineUnavailableException | UnsupportedAudioFileException | IOException e) {
          System.out.println("" + e);
        }
    }


}
