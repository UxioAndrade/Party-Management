/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;

/**
 *
 * @author alumnogreibd
 */
public class VUserSearch extends javax.swing.JDialog {

    private String usuarioSesion; //Poderia haber que cambialo a un usuario
    private app.FachadaAplicacion fa;
    private VPrincipal padre;

    /**
     * Creates new form VUsuarios
     */
    public VUserSearch(java.awt.Frame parent, boolean modal, app.FachadaAplicacion fa, String usuarioSesion, VPrincipal padre) {
        super(parent, modal);
        
        this.fa = fa;
        this.usuarioSesion = usuarioSesion;
        this.padre = padre;
        
        BGPanel panelFondo = new BGPanel("/resources/logo.png");
        setContentPane(panelFondo);       
        
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        StringsListModel lstAmigos = new StringsListModel();
        this.listaAmigos.setModel(lstAmigos);
        //fa.consultarAmigos(string)
        
        StringsListModel lstUsuarios = new StringsListModel();
        this.listaUsuarios.setModel(lstUsuarios);
        
        StringsListModel lstBloqueados = new StringsListModel();
        this.listaBloqueados.setModel(lstBloqueados);
        //fa.consultarBloqueados(string)
        
        MessagesTableModel modMens = new MessagesTableModel();
        this.tablaMensaxes.setModel(modMens);
        
        this.txtNomeUsuario.setText(null);
        
        JPopupMenu popupTable = new JPopupMenu();
        JMenuItem borrar = new JMenuItem("Borrar mensaxe");
        popupTable.add(borrar);
        this.tablaMensaxes.setComponentPopupMenu(popupTable);
        
        borrar.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                if(tablaMensaxes.getSelectedRow() != -1){
                    if(usuarioSesion.equals(tablaMensaxes.getValueAt(tablaMensaxes.getSelectedRow(), 0))){
                        app.Message m = new app.Message(usuarioSesion,(String) listaUsuarios.getSelectedValue(), (java.sql.Timestamp) tablaMensaxes.getValueAt(tablaMensaxes.getSelectedRow(), 1), (String) tablaMensaxes.getValueAt(tablaMensaxes.getSelectedRow(),2), false);
                        fa.borrarMensaje(m);
                        
                        MessagesTableModel modMens = (MessagesTableModel) tablaMensaxes.getModel();
                        modMens.setFilas(fa.consultarMensajes(usuarioSesion, (String) listaUsuarios.getSelectedValue()));
                    }
                    else fa.muestraExcepcion("Non tes permiso para borrar esta mensaxe");
                }
            }
        });
        
        this.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNomeUsuario = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        tabbedPanelUsuarios = new javax.swing.JTabbedPane();
        tabUsuarios = new javax.swing.JScrollPane();
        listaUsuarios = new javax.swing.JList();
        tabAmigos = new javax.swing.JScrollPane();
        listaAmigos = new javax.swing.JList();
        tabBloqueados = new javax.swing.JScrollPane();
        listaBloqueados = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMensaxes = new javax.swing.JTable();
        txtMensaxe = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Usuarios");
        setIconImage(null);
        setResizable(false);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/token1.png"))); // NOI18N
        btnBuscar.setBorder(null);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tabbedPanelUsuarios.setName(""); // NOI18N

        listaUsuarios.setModel(new StringsListModel());
        listaUsuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaUsuariosMouseClicked(evt);
            }
        });
        tabUsuarios.setViewportView(listaUsuarios);

        tabbedPanelUsuarios.addTab("Usuarios", tabUsuarios);

        listaAmigos.setModel(new StringsListModel());
        listaAmigos.setCellRenderer(new ImageListCellRenderer());
        listaAmigos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaAmigosMouseClicked(evt);
            }
        });
        tabAmigos.setViewportView(listaAmigos);

        tabbedPanelUsuarios.addTab("Amigos", tabAmigos);

        listaBloqueados.setModel(new StringsListModel());
        listaBloqueados.setCellRenderer(new ImageListCellRenderer());
        listaBloqueados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaBloqueadosMouseClicked(evt);
            }
        });
        tabBloqueados.setViewportView(listaBloqueados);

        tabbedPanelUsuarios.addTab("Bloqueados", tabBloqueados);

        jLabel1.setText("Mensaxes");

        tablaMensaxes.setModel(new MessagesTableModel());
        jScrollPane1.setViewportView(tablaMensaxes);

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNomeUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tabbedPanelUsuarios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtMensaxe, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabbedPanelUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addComponent(btnEnviar))
                            .addComponent(txtMensaxe))))
                .addContainerGap())
        );

        tabbedPanelUsuarios.getAccessibleContext().setAccessibleName("panelUsuarios");
        tabbedPanelUsuarios.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaUsuariosMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            String usuario = (String) this.listaUsuarios.getSelectedValue();
            VOtherUser vou = new VOtherUser((java.awt.Frame) this.getParent(), true, this.fa, this.fa.seleccionarUsuario(usuario));
            vou.setVisible(true);
        }
        else if(evt.getClickCount() == 1){
            MessagesTableModel modMens = (MessagesTableModel) this.tablaMensaxes.getModel();
            modMens.setFilas(fa.consultarMensajes(usuarioSesion, (String) this.listaUsuarios.getSelectedValue()));
        }
    }//GEN-LAST:event_listaUsuariosMouseClicked

    private void txtNomeUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeUsuarioActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        if(!this.txtNomeUsuario.getText().isEmpty() || this.txtNomeUsuario.getText() != null){
            StringsListModel lstUsuarios = (StringsListModel) this.listaUsuarios.getModel();
            lstUsuarios.setElementos(fa.buscarUsuario(this.txtNomeUsuario.getText()));
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void listaAmigosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaAmigosMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_listaAmigosMouseClicked

    private void listaBloqueadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaBloqueadosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listaBloqueadosMouseClicked

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        // TODO add your handling code here:
        if(listaUsuarios.getSelectedIndex() != -1 && (txtMensaxe.getText().length() != 0 || txtMensaxe.getText() != null)){
            app.Message m = new app.Message(usuarioSesion, (String) listaUsuarios.getSelectedValue(), new java.sql.Timestamp(System.currentTimeMillis()), txtMensaxe.getText(), false);
            fa.insertarMensaje(m);
        }
        
        MessagesTableModel modMens = (MessagesTableModel) this.tablaMensaxes.getModel();
        modMens.setFilas(fa.consultarMensajes(usuarioSesion, (String) listaUsuarios.getSelectedValue()));
        txtMensaxe.setText(null);
    }//GEN-LAST:event_btnEnviarActionPerformed
    /*
    protected void amigarUsuario()
    {
        ModeloListaEtiquetas me;
        me=(ModeloListaEtiquetas) listaAmigos.getModel();
        
        if(me.getSize() > 0)
        {
            //Falta realizar as actualizacions pertinentes
            fa.amigarUsuario(me.getElementAt(listaUsuarios.getSelectedIndex()).getNicknameUsuario());
        }
    }
    
    protected void desamigarUsuario()
    {
        ModeloListaEtiquetas me;
        me=(ModeloListaEtiquetas) listaAmigos.getModel();
        
        if(me.getSize() > 0)
        {
            //Falta realizar as actualizacions pertinentes
            fa.desamigarUsuario(me.getElementAt(listaAmigos.getSelectedIndex()).getNicknameUsuario());
        }
    }
    
    protected void bloquearUsuario()
    {
        ModeloListaEtiquetas me;
        me=(ModeloListaEtiquetas) listaAmigos.getModel();
        
        if(me.getSize() > 0)
        {
            //Falta realizar as actualizacions pertinentes
            fa.bloquearUsuario(me.getElementAt(listaAmigos.getSelectedIndex()).getNicknameUsuario());
        }
    }
    
    protected void desbloquearUsuario()
    {
        ModeloListaEtiquetas me;
        me=(ModeloListaEtiquetas) listaAmigos.getModel();
        
        if(me.getSize() > 0)
        {
            //Falta realizar as actualizacions pertinentes
            fa.desbloquearUsuario(me.getElementAt(listaAmigos.getSelectedIndex()).getNicknameUsuario());
        }
    }
    */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listaAmigos;
    private javax.swing.JList listaBloqueados;
    private javax.swing.JList listaUsuarios;
    private javax.swing.JScrollPane tabAmigos;
    private javax.swing.JScrollPane tabBloqueados;
    private javax.swing.JScrollPane tabUsuarios;
    private javax.swing.JTabbedPane tabbedPanelUsuarios;
    private javax.swing.JTable tablaMensaxes;
    private javax.swing.JTextField txtMensaxe;
    private javax.swing.JTextField txtNomeUsuario;
    // End of variables declaration//GEN-END:variables
}
